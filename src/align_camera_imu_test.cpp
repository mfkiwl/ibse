#include <ibse_testing.h>
#include <ibse_internal.h>
#include <iostream>


int
main()
{
   const size_t N = 10;
   
   Eigen::ArrayXXd in_accVis(N,3);
   in_accVis << -0.662419945981779, 1.824101295842961, 2.896776974020415,
      -0.662431489522616, 1.824321166807774, 2.897104972439537,
      -0.661824708158484, 1.823812717089266, 2.896018841572308,
      -0.659867235362322, 1.820807777017613, 2.890165512356016,
      -0.656868141629438, 1.815861715760839, 2.879995505209227,
      -0.653567029120227, 1.812221827277211, 2.868579315074893,
      -0.650734783670111, 1.810821083174493, 2.860134199320156,
      -0.648676785506472, 1.810427285247322, 2.855654089336448,
      -0.647659382042185, 1.810439295623441, 2.854072564870451,
      -0.647493579432640, 1.810456828478497, 2.853854841143328;

   Eigen::ArrayXXd in_qtVis(N, 4);
   in_qtVis << 0.916236151399000, 0.351592313010000, -0.187771910834000, -0.040444463778000,
      0.916040017590000, 0.351978063300000, -0.188019949241000, -0.040379805248000,
      0.912912607316000, 0.356835900165000, -0.194127734052000, -0.039661104949000,
      0.912502506331000, 0.357697529929000, -0.194494516663000, -0.039541443313000,
      0.912539713466000, 0.357521889296000, -0.194623491600000, -0.039636568069000,
      0.912263305875000, 0.358071567372000, -0.194972059328000, -0.039324005308000,
      0.912462937896000, 0.357605813883000, -0.194920706519000, -0.039183235436000,
      0.912593525183000, 0.357129353766000, -0.195223618935000, -0.038979859353000,
      0.912645235653000, 0.356866460393000, -0.195488491318000, -0.038849553816000,
      0.912766442526000, 0.356542129926000, -0.195536453105000, -0.038738690857000;

   std::vector<double> in_tVis = {0, 0.03333, 0.066664, 0.10002, 0.133324, 0.166655,
                                  0.199986, 0.233319, 0.266648, 0.29998 };
   
   const size_t M = 31;

   Eigen::ArrayXXd in_accImu(M,3);
   in_accImu << 7.417240000000000, 0.191540000000000, 6.131550000000000,
      7.376540000000000, 0.189140000000000, 6.100430000000000,
      7.345410000000000, 0.148440000000000, 5.923250000000000,
      7.335830000000000, 0.148440000000000, 5.839460000000000,
      7.345410000000000, 0.083800000000000, 5.674260000000000,
      7.304710000000000, 0.112530000000000, 5.750870000000000,
      7.366960000000000, 0.086190000000000, 5.837060000000000,
      7.417240000000000, 0.112530000000000, 5.894520000000000,
      7.407660000000000, 0.129290000000000, 5.865790000000000,
      7.378930000000000, 0.107740000000000, 5.805940000000000,
      7.407660000000000, 0.067040000000000, 5.750870000000000,
      7.412450000000000, 0.043100000000000, 5.738900000000000,
      7.477090000000000, 0.023940000000000, 5.906500000000000,
      7.429210000000000, 0.057460000000000, 5.975930000000000,
      7.462730000000000, 0.107740000000000, 6.093240000000000,
      7.424420000000000, 0.045490000000000, 6.100430000000000,
      7.414840000000000, 0.119710000000000, 6.138730000000000,
      7.438780000000000, 0.114920000000000, 6.086060000000000,
      7.405270000000000, 0.083800000000000, 5.906500000000000,
      7.457940000000000, 0.143650000000000, 5.683840000000000,
      7.426810000000000, 0.196320000000000, 5.583280000000000,
      7.417240000000000, 0.184350000000000, 5.683840000000000,
      7.381320000000000, 0.213080000000000, 5.691020000000000,
      7.326260000000000, 0.117320000000000, 5.865790000000000,
      7.311890000000000, 0.086190000000000, 5.983110000000000,
      7.347810000000000, 0.064640000000000, 5.954380000000000,
      7.364560000000000, 0.062250000000000, 5.856220000000000,
      7.417240000000000, 0.071830000000000, 5.671860000000000,
      7.424420000000000, 0.071830000000000, 5.856220000000000,
      7.386110000000000, 0.040700000000000, 5.992690000000000,
      7.386110000000000, 0.033520000000000, 5.956770000000000;

   std::vector<double> in_tImu = 
      {0, 0.009997499999997, 0.019992166999998, 0.030009583000002, 0.040078082999997,
       0.049982667000002, 0.059983750000001, 0.069978749999997, 0.079975333000000,
       0.089971499999997, 0.099969500000000, 0.109972499999998, 0.119962749999999,
       0.129962083000002, 0.139967083000002, 0.149954250000000, 0.159952083000000,
       0.169947583000003, 0.179945500000002, 0.189941583000000, 0.199939333000003,
       0.209938417000004, 0.219934750000000, 0.229932167000001, 0.239932332999999,
       0.249928167000000, 0.259922250000002, 0.269920499999998, 0.279918082999998,
       0.289914082999999, 0.299911500000000};

   Eigen::Matrix3d Rs;
   Rs <<  -0.235500955402537, -0.521497889409830, 0.820109292317545,
      -0.298565003901065, 0.841858357434236, 0.449592531592426,
      -0.924877418066875, -0.138976463328227, -0.353959466875416;

   double td = 0.161759649063278;

   Eigen::ArrayXXd out_accVis;
   Eigen::ArrayXXd out_qtVis;
   Eigen::MatrixXd out_accImu;
   std::vector<double> out_t;

   ibse::alignCameraAndIMU(in_accVis, in_qtVis, in_tVis, in_accImu, in_tImu, Rs, td,
                           out_accVis, out_qtVis, out_accImu, out_t);


   APX_EQ(out_qtVis(0,0),  0.912303); APX_EQ(out_qtVis(0,1),  0.357990);
   APX_EQ(out_qtVis(0,2), -0.194920); APX_EQ(out_qtVis(0,3), -0.039370);

   APX_EQ(out_qtVis(1,0),  0.912293); APX_EQ(out_qtVis(1,1),  0.358000);
   APX_EQ(out_qtVis(1,2), -0.194964); APX_EQ(out_qtVis(1,3), -0.039302);

   /* 
   ...
   0.912353726441481   0.357860610762409  -0.194948799782478  -0.039260245538871
   0.912413724551387   0.357720631570283  -0.194933366028599  -0.039217938066305
   0.912470192348536   0.357579345324049  -0.194937534066268  -0.039171937382606
   0.912508995119167   0.357437769730748  -0.195027541610411  -0.039111506113363
   0.912548175939856   0.357294814785910  -0.195118426085680  -0.039050486070574
   0.912587332929433   0.357151946791148  -0.195209255281909  -0.038989503142257
   0.912606582712119   0.357062969958753  -0.195290502466591  -0.038946955603648
   0.912622091923129   0.356984121926718  -0.195369944051221  -0.038907873845754
   0.912637603978068   0.356905259436297  -0.195449400203078  -0.038868784921426
   0.912653123790586   0.356826357506742  -0.195528896090958  -0.038829676448726
   0.912668623821278   0.356747556146977  -0.195608290651979  -0.038790617824374
   0.912684137944387   0.356668683142083  -0.195687757397459  -0.038751523688450
   0.912699660859937   0.356589765436875  -0.195767269179749  -0.038712407396402
   0.912715156107305   0.356510988395280  -0.195846639239538  -0.038673360825576
   0.912730667903141   0.356432127222125  -0.195926094064211  -0.038634272554164
   0.912746176079291   0.356353284451270  -0.196005530348056  -0.038595193404022
   0.912761688005454   0.356274422615539  -0.196084985840295  -0.038556104804197
   0.912777197086137   0.356195575246081  -0.196164426757361  -0.038517023374715
   0.912792708753197   0.356116714727616  -0.196243880922416  -0.038477935427806
   0.912808222489979   0.356037843686791  -0.196323345689043  -0.038438842265391
   0.912823731958541   0.355958994345376  -0.196402788592909  -0.038399759858490
   0.912839243108946   0.355880136453558  -0.196482240111546  -0.038360673213502
   0.912854758524468   0.355801256878104  -0.196561713477048  -0.038321575820819
   0.912870267218825   0.355722411472715  -0.196641152415260  -0.038282495364846
   0.912885773196476   0.355643579878911  -0.196720577437916  -0.038243421754713
   0.912901285639293   0.355564715416533  -0.196800035576574  -0.038204331852966
   0.912916797047250   0.355485856215335  -0.196879488414446  -0.038165244558972
   0.912932305999158   0.355407009500567  -0.196958928671894  -0.038126163453993
   0.912947817149564   0.355328151608748  -0.197038380190530  -0.038087076809005
   ...
   */

   APX_EQ(out_qtVis(30,0),  0.912947); APX_EQ(out_qtVis(30,1),  0.355328);
   APX_EQ(out_qtVis(30,2), -0.197038); APX_EQ(out_qtVis(30,3), -0.038087);
}
