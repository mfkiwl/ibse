#include <ibse_testing.h>
#include <ibse_internal.h>
#include <iostream>


int
main()
{
   const size_t N = 10;
   Eigen::ArrayXXd qtVis(N, 4);
   qtVis << 0.916236151399000, 0.351592313010000, -0.187771910834000, -0.040444463778000,
      0.916040017590000, 0.351978063300000, -0.188019949241000, -0.040379805248000,
      0.912912607316000, 0.356835900165000, -0.194127734052000, -0.039661104949000,
      0.912502506331000, 0.357697529929000, -0.194494516663000, -0.039541443313000,
      0.912539713466000, 0.357521889296000, -0.194623491600000, -0.039636568069000,
      0.912263305875000, 0.358071567372000, -0.194972059328000, -0.039324005308000,
      0.912462937896000, 0.357605813883000, -0.194920706519000, -0.039183235436000,
      0.912593525183000, 0.357129353766000, -0.195223618935000, -0.038979859353000,
      0.912645235653000, 0.356866460393000, -0.195488491318000, -0.038849553816000,
      0.912766442526000, 0.356542129926000, -0.195536453105000, -0.038738690857000;

   std::vector<double> tVis = {0, 0.03333, 0.066664, 0.10002, 0.133324, 0.166655,
                               0.199986, 0.233319, 0.266648, 0.29998 };
   

   const size_t Nimu = 42;
   std::vector<double> tImu = {
      0, 0.009997499999997, 0.019992166999998, 0.030009583000002, 0.040078082999997,
      0.049982667000002, 0.059983750000001, 0.069978749999997, 0.079975333000000,
      0.089971499999997, 0.099969500000000, 0.109972499999998, 0.119962749999999,
      0.129962083000002, 0.139967083000002, 0.149954250000000, 0.159952083000000,
      0.169947583000003, 0.179945500000002, 0.189941583000000, 0.199939333000003,
      0.209938417000004, 0.219934750000000, 0.229932167000001, 0.239932332999999,
      0.249928167000000, 0.259922250000002, 0.269920499999998, 0.279918082999998,
      0.289914082999999, 0.299911500000000, 0.309910416999998, 0.319907833000002,
      0.329908666999998, 0.339909249999998, 0.349900667000000, 0.359898250000001,
      0.369896167000000, 0.379891833000002, 0.389890749999999, 0.399883166999999,
      0.409890832999999};
   
   Eigen::ArrayXXd angImu(Nimu, 3);
   angImu << -0.005030000000000, 0.083020000000000, -0.020570000000000,
      -0.003960000000000, 0.055330000000000, -0.017380000000000,
      -0.009290000000000, 0.023370000000000, -0.009920000000000,
      -0.014610000000000, 0.005260000000000, -0.002460000000000,
      -0.022070000000000, 0.008460000000000,  0.002860000000000,
      -0.024200000000000, 0.027630000000000,  0.006060000000000,
      -0.022070000000000, 0.047870000000000,  0.006060000000000,
      -0.015680000000000, 0.050000000000000,  0.007120000000000,
      -0.012480000000000, 0.040410000000000,  0.001800000000000,
      -0.011420000000000, 0.028700000000000, -0.002460000000000,
      -0.010350000000000, 0.024430000000000, -0.005660000000000,
      -0.010350000000000, 0.029760000000000, -0.004590000000000,
      -0.010350000000000, 0.045740000000000, -0.003530000000000,
      -0.005030000000000, 0.052130000000000, -0.002460000000000,
      -0.000770000000000, 0.046810000000000, -0.000330000000000,
      0.001360000000000, 0.025500000000000, -0.001400000000000,
      -0.000770000000000, 0.004190000000000,  0.000730000000000,
      -0.006090000000000,-0.019240000000000,  0.000730000000000,
      -0.008220000000000,-0.037350000000000, -0.000330000000000,
      -0.008220000000000,-0.045870000000000, -0.004590000000000,
      -0.010350000000000,-0.036290000000000, -0.004590000000000,
      -0.009290000000000,-0.013920000000000, -0.004590000000000,
      -0.010350000000000, 0.002060000000000, -0.002460000000000,
      -0.013550000000000, 0.009520000000000, -0.001400000000000,
      -0.015680000000000,-0.000070000000000,  0.000730000000000,
      -0.012480000000000,-0.010720000000000,  0.001800000000000,
      -0.010350000000000,-0.013920000000000, -0.001400000000000,
      -0.003960000000000,-0.004330000000000, -0.003530000000000,
      -0.001830000000000, 0.010590000000000, -0.006720000000000,
      -0.003960000000000, 0.012720000000000, -0.009920000000000,
      -0.009290000000000,-0.005390000000000, -0.012050000000000,
      -0.015680000000000,-0.032020000000000, -0.012050000000000,
      -0.023140000000000,-0.046940000000000, -0.013120000000000,
      -0.024200000000000,-0.040550000000000, -0.013120000000000,
      -0.018880000000000,-0.018180000000000, -0.016310000000000,
      -0.013550000000000, 0.010590000000000, -0.018440000000000,
      0.000300000000000, 0.042540000000000, -0.023770000000000,
      0.014150000000000, 0.067050000000000, -0.024830000000000,
      0.022670000000000, 0.071310000000000, -0.029100000000000,
      0.023740000000000, 0.052130000000000, -0.035490000000000,
      0.022670000000000, 0.014850000000000, -0.036550000000000,
      0.015210000000000,-0.024570000000000, -0.038680000000000;

   Eigen::Matrix3d Rs = Eigen::Matrix3d::Zero();
   double td = 0;
   Eigen::Vector3d bg(0,0,0);
   ibse::estimateAlignment(qtVis, tVis, angImu, tImu, // input
                           Rs, td, bg); // output

   // Should be:
   // Rs = -0.235500955402650  -0.521497889411665   0.820109292316346
   //      -0.298565003901305   0.841858357433204   0.449592531594200
   //      -0.924877418066768  -0.138976463327597  -0.353959466875942
   //
   // td = 0.161759649063278
   //
   // bg = 0.018785011802957  -0.013030864183393  -0.002954680071341
   
   APX_EQ(Rs(0,0), -0.235501); APX_EQ(Rs(0,1), -0.521498); APX_EQ(Rs(0,2), 0.820109);
   APX_EQ(Rs(1,0), -0.298565); APX_EQ(Rs(1,1),  0.841858); APX_EQ(Rs(1,2), 0.449593);
   APX_EQ(Rs(2,0), -0.924877); APX_EQ(Rs(2,1), -0.138976); APX_EQ(Rs(2,2), -0.353959);

   APX_EQ(td, 0.16176);

   APX_EQ(bg.x(), 0.018785); APX_EQ(bg.y(), -0.0130309); APX_EQ(bg.z(), -0.00295468);
}
